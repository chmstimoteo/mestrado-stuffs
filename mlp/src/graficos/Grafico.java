package graficos;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Random;
import javax.swing.JFrame;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.StandardXYItemRenderer;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DatasetUtilities;
import org.jfree.data.time.Hour;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesCollection;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

public class Grafico extends javax.swing.JPanel {
    
	private static final long serialVersionUID = 1L;

    public Grafico(ArrayList<ArrayList<Double>> dados) {
    	double valor;
    	//Initializing Components
        initComponents();
        XYSeries errosTreinamento = new XYSeries("Treinamento",false);
        XYSeries errosValidacao = new XYSeries("Validacao",false);       
        for (int i = 0; i < dados.get(0).size(); i++) {
            valor = dados.get(0).get(i);
            errosTreinamento.add(valor, i);
            valor = dados.get(1).get(i);
            errosValidacao.add(valor, i);
        }
        //Show graphics
        exibirGrafico(errosTreinamento, errosValidacao);
    }

    /**
     * Construtor alternativo feito para se adequar as necessidades do projeto
     * rodando direto das classes do ClanAPSO
     * @param treinamento
     * @param validacao
     */
    public Grafico(ArrayList<Double> treinamento, ArrayList<Double> validacao) {
    	double valor;
    	//Initializing components
    	initComponents();
        XYSeries errosTreinamento = new XYSeries("Treinamento",false);
        XYSeries errosValidacao = new XYSeries("Validacao",false);
        for (int i = 0; i < treinamento.size(); i++) {
            valor = treinamento.get(i);
            errosTreinamento.add(valor, i);
            valor = validacao.get(i);
            errosValidacao.add(valor, i);
        }
        exibirGrafico(errosTreinamento, errosValidacao);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }

    /**
     * Funcao para criar o grafico efetivamente e exibilo na tela
     * como parametro recebe as series de dados q serao exibidas
     * @param serie1
     * @param serie2
     */
    private void exibirGrafico(XYSeries serie1, XYSeries serie2) {
        XYSeriesCollection dataset = new XYSeriesCollection();
        dataset.addSeries(serie1);
        dataset.addSeries(serie2);
        
        JFreeChart chart = ChartFactory.createXYLineChart(
                "Erro Medio Absoluto",
                "EMAs",
                "Ciclos",
                dataset,
                PlotOrientation.HORIZONTAL,
                true,
                true,
                false);
        ChartPanel panel = new ChartPanel(chart);


        JFrame f = new JFrame("Analise de Erro da MLP");
        f.setSize(640, 480);
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.getContentPane().add(panel);
        f.setVisible(true);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
